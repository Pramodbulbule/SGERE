- name: Create fuse tmp directory if it does not exist
  file:
    path: '{{ mount_folder }}/fusetmp/{{ mount_name }}'
    state: directory
    mode: '0600'

- name: Create fuse_connections directory if it does not exist
  file:
    path: /etc/fuse_connections
    state: directory
    mode: '0755'

- name: Copy config
  copy:
    src: ../../includes/fuse_connections/env/{{ stage }}/{{ location }}/{{ fuse_cfg_name }}
    dest: /etc/fuse_connections/{{ fuse_cfg_name }}
    group: root
    mode: '0600'
  
- name: az login
  shell: az login --service-principal --username {{ client_id }} --password {{ client_password }} --tenant {{ tenant_id }}

- name: az subscription
  shell: az account set --subscription {{ subscription_id }}
  
- name: retrieve date
  command: date +'%Y-%m-%d' -d '+3 years'
  register: end_date

- name: Retrieve Storage account name from cfg file
  shell: cat /etc/fuse_connections/{{ fuse_cfg_name }} | grep accountName | awk '{print $2}'
  register: storage_account_name

- name: Retrieve Container name from cfg file
  shell: cat /etc/fuse_connections/{{ fuse_cfg_name }} | grep containerName | awk '{print $2}'
  register: container_name  

- name: Retrieve secret
  command: az storage container generate-sas --account-name {{ storage_account_name.stdout }} --expiry {{ end_date.stdout }} --name {{ container_name.stdout }} --permissions dlrw --only-show-errors -o tsv
  register: sas_token_value

- name: "Replace sas token value in cfg files"
  ansible.builtin.replace:
    path: /etc/fuse_connections/{{ fuse_cfg_name }}
    regexp: 'sasToken'
    replace: 'sasToken {{ sas_token_value.stdout }}'

- name: Create mount directory if it does not exist
  file:
    path: '{{ mount_folder }}/{{ mount_name }}'
    state: directory
    mode: '0755'

- name: Copy script
  copy:
    src: ../../includes/blobfuse_scripts/mount_{{ mount_name }}.sh
    dest: /opt/sgre/mount_{{ mount_name }}.sh
    group: root
    mode: '0755'

- name: Mount {{ mount_name }} storage from the cloud
  shell: /opt/sgre/mount_{{ mount_name }}.sh
  become: true

- name: Add to fstab and mount
  mount:
    src: /opt/sgre/mount_{{ mount_name }}.sh
    path: '{{ mount_folder }}/{{ mount_name }}'
    opts: _netdev
    state: mounted
    fstype: fuse