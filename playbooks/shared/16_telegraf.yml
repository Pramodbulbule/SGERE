- hosts: "{{ variable_hosts | default('all') }}"
  become: true
  roles:
    - telegraf-preinstall
    - telegraf-resolve-instrumentation-key
    - dj-wasabi.telegraf
    - telegraf-postinstall
  vars:
    telegraf_agent_package_state: latest
    telegraf_agent_package_method: repo
    telegraf_agent_package_version: 1.22.1
    telegraf_agent_interval: 300
    telegraf_agent_debug: False
    telegraf_agent_quiet: False
    telegraf_agent_hostname: "{{ ansible_nodename }}"
    telegraf_agent_output:
      - type: application_insights
        config:
          - instrumentation_key = {{ instrumentation_key.stdout }}
    telegraf_global_tags:
      - tag_name: stage
        tag_value: "{{ stage }}"
      - tag_name: location
        tag_value: "{{ location }}"      
      - tag_name: host
        tag_value: "{{ ansible_nodename }}"
    telegraf_plugins_default:
      - plugin: cpu
        config:
          - percpu = false
          - totalcpu = true
          - collect_cpu_time = false
          - fieldpass = ["usage_user","usage_system","usage_idle","usage_active","usage_idle"]
          - fielddrop = ["usage_steal"]
      - plugin: disk
        config:
          - ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
          - fieldpass = ["free", "disk_used", "used_percent"]
      - plugin: mem
        config:
          - fieldpass = ["available","available_percent", "used_percent"]
      - plugin: smart
        config:
          - attributes = true
          - devices = [ "/dev/sda" ]
          - path = "/usr/sbin/smartctl"
          - use_sudo = true          
      - plugin: system
        config:
          - fieldpass = ["uptime","n_cpus"]
      - plugin: sensors
        config:
          - fielddrop = ["temp_crit_alarm", "temp_crit"]
      - plugin: nvidia_smi
        config:
        - fieldpass = ["fan_speed", "power_draw", "temperature_gpu", "utilization_gpu", "utilization_memory", "driver_version", "cuda_version"]
      - plugin: docker
        config:
          - perdevice = false
          - perdevice_include = ["blkio", "network"]
          - total = true
          - total_include = ["cpu", "blkio", "network"]
          - fieldpass = ["n_images", "n_containers_running", "n_containers_stopped", "usage", "usage_system", "usage_total", "usage_percent", "health_status", "docker_container_cpu_usage_percent"]
          - fielddrop = ["usage_system", "usage_total"]
          - container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh cad /mnt/azure/cad" ]
        - timeout = "5s"
        - name_override = "cad"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh camera-params /mnt/azure/camera-params" ]
        - timeout = "5s"
        - name_override = "camera_params"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh models /mnt/azure/models" ]
        - timeout = "5s"
        - name_override = "models"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh data-provisioning /mnt/azure/data-provisioning" ]
        - timeout = "5s"
        - name_override = "data_provisioning"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh system-config /mnt/azure/system-config" ]
        - timeout = "5s"
        - name_override = "system_config"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh calibration /mnt/azure/calibration" ]
        - timeout = "5s"
        - name_override = "calibration"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-mount.sh retrain /mnt/azure/retrain" ]
        - timeout = "5s"
        - name_override = "retrain"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "name",
            "path"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-container.sh laser-hub" ]
        - timeout = "5s"
        - name_override = "laser_hub"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "container_name"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-nvidia.sh" ]
        - timeout = "5s"
        - name_override = "nvidia_smi"
        - name_suffix = ""
        - data_format = "json"   
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-space.sh /" ]
        - timeout = "5s"
        - name_override = "mount_space"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "mount"
          ]        
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-space.sh /home" ]
        - timeout = "5s"
        - name_override = "mount_space"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "mount"
          ]
      - plugin: exec
        config:
        - commands = [ "/opt/sgre/telegraf/check-space.sh /home" ]
        - timeout = "5s"
        - name_override = "mount_space"
        - name_suffix = ""
        - data_format = "json"
        - tag_keys = [
            "mount"
          ]          
      - plugin: procstat
        config:
        - systemd_unit = "etcd.service"
      - plugin: procstat
        config:
        - systemd_unit = "iotedge.service"